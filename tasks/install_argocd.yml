---
# Install ArgoCD in the Kubernetes cluster

- name: Create ArgoCD namespace
  kubernetes.core.k8s:
    state: present
    definition:
      apiVersion: v1
      kind: Namespace
      metadata:
        name: "{{ argocd_app_namespace }}"

- name: Install ArgoCD using official manifests
  kubernetes.core.k8s:
    state: present
    src: https://raw.githubusercontent.com/argoproj/argo-cd/blob/master/manifests/install.yaml
    namespace: "{{ argocd_app_namespace }}"

- name: Wait for ArgoCD server deployment to be ready
  kubernetes.core.k8s_info:
    kind: Deployment
    namespace: "{{ argocd_app_namespace }}"
    name: argocd-server
  register: argocd_server
  until: argocd_server.resources[0].status.readyReplicas | default(0) > 0
  retries: 30
  delay: 10

- name: Configure ArgoCD repository
  kubernetes.core.k8s:
    state: present
    definition:
      apiVersion: argoproj.io/v1alpha1
      kind: Repository
      metadata:
        name: argocd-repo
        namespace: "{{ argocd_app_namespace }}"
      spec:
        url: "{{ argocd_repo_url }}"
        type: "{{ argocd_repo_type }}"
        revision: "{{ argocd_repo_revision }}"

- name: Create ArgoCD app-of-apps application
  kubernetes.core.k8s:
    state: present
    definition:
      apiVersion: argoproj.io/v1alpha1
      kind: Application
      metadata:
        name: "{{ argocd_app_name }}"
        namespace: "{{ argocd_app_namespace }}"
      spec:
        project: default
        source:
          repoURL: "{{ argocd_repo_url }}"
          targetRevision: "{{ argocd_repo_revision }}"
          path: "{{ argocd_app_path }}"
        destination:
          server: "{{ argocd_app_dest_server }}"
          namespace: "{{ argocd_app_dest_namespace }}"
        syncPolicy:
          automated:
            prune: true
            selfHeal: true
