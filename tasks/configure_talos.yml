---
# Generate and distribute Talos configuration files

- name: Ensure hidden talos directory exists
  ansible.builtin.file:
    path: /tmp/.talos
    state: directory
    mode: '0700'

- name: Add cilium helm repo if cilium is to be installed
  ansible.builtin.command:
    cmd: helm repo add cilium https://helm.cilium.io/
  when: install_cilium

- name: Generate cilium values file
  ansible.builtin.template:
    src: cilium_values.yaml.j2
    dest: /tmp/.talos/cilium_values.yaml
  when: install_cilium

- name: Generate cilium manifests
  ansible.builtin.command:
    cmd: >-
      helm template cilium cilium/cilium
      --version {{ cilium_version }}
      --namespace kube-system
      --values /tmp/.talos/cilium_values.yaml
  when: install_cilium
  register: cilium_manifest

- name: Create Talos ISO customization file
  ansible.builtin.template:
    src: talos_iso_customizations.yaml.j2
    dest: /tmp/.talos/talos_iso_customizations.yaml

- name: Get Talos ISO with customizations applied
  ansible.builtin.uri:
    url: "https://factory.talos.dev/schematics"
    method: POST
    body: "{{ lookup('file', '/tmp/.talos/talos_iso_customizations.yaml') }}"
    status_code: 201
    headers:
      Content-Type: "application/x-yaml"
    return_content: yes
  register: talos_iso_response

- name: Set Talos ISO download URL and Installer Image
  ansible.builtin.set_fact:
    talos_installer_image_url: "factory.talos.dev/metal-installer/{{ talos_iso_response.json.id }}:{{ talos_version }}"
    talos_iso_download_url: "https://factory.talos.dev/image/{{ talos_iso_response.json.id }}/{{ talos_version }}/metal-amd64.iso"

- name: Create Talos config patch file
  ansible.builtin.template:
    src: talos_config_patch.yaml.j2
    dest: /tmp/.talos/talos_config_patch.yaml

- name: Create talos node patch file
  ansible.builtin.template:
    src: talos_node_patch.yaml.j2
    dest: /tmp/.talos/talos_node_patch_{{ node.name }}.yaml
  loop: "{{ masters + workers }}"
  loop_control:
    loop_var: node
    label: "{{ node.name }}"

- name: Generate talos secrets
  ansible.builtin.command:
    cmd: >-
      talosctl gen secrets --output-file /tmp/.talos/talos_secrets.yaml
  args:
    creates: /tmp/.talos/talos_secrets.yaml

- name: Generate talos configuration files
  ansible.builtin.command:
    cmd: >-
      talosctl gen config {{ cluster_name }} https://{{ cluster_name }}:6443
      --with-secrets /tmp/.talos/talos_secrets.yaml
      --output /tmp/.talos
      --config-patch @/tmp/.talos/talos_config_patch.yaml
      --force

