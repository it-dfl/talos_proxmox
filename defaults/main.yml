---
# Default variables for talos_proxmox role
# All sensitive and environment-specific data should be overridden in group_vars/host_vars or via extra_vars

proxmox_server: "proxmox.example.com"
proxmox_port: 8006
proxmox_url: "https://{{ proxmox_server }}:{{ proxmox_port }}"
proxmox_api_url: "{{ proxmox_url }}/api2/json"
proxmox_api_user: "example_proxmox_user"
proxmox_api_token_id: "example_token_id"
proxmox_api_token_secret: "example_token"

proxmox_node: "proxmox"
proxmox_storage: "local"
proxmox_vm_storage: "local-lvm"
proxmox_storage_url: "{{ proxmox_api_url }}/nodes/{{ proxmox_node }}/storage/{{ proxmox_storage }}"

talos_version: "v1.11.1"
talos_qemu_agent_path: "factory.talos.dev/image/ce4c980550dd2ab1b17bbf2b08801c7eb59418eafe8f279833297925d67c7515"
talos_iso_download_url: "https://{{ talos_qemu_agent_path }}/{{ talos_version }}/metal-amd64.iso"

talos_installation_disk_path: "/dev/sda"  # Disk inside VM to install Talos onto (e.g. /dev/sda)
talos_cpu_type: "kvm64"

cluster_name: "k8s.example.com"
cluster_shared_ip: 192.168.100.10
mgmt_network: "192.168.100.0/24"
mgmt_gateway: "192.168.100.1"

# Enable VLAN configuration (activates Multus as well as VLAN interfaces on Proxmox VMs) if set to false the VM interfaces will be configured as access ports
enable_vlans: true
# Set this to false if the vms interface should not have any vlan tag. It must be set if enable_vlans is true.
# If enable_vlans is true the mgmt_vlan_id is used for a mgmt subinterface inside the vm, else it is used on proxmox for the VM interface vlan id
mgmt_vlan_id: 100

k8s_vmbr: "vmbr0"

masters:
  - name: master1
    ip: 192.168.100.11
    cores: 2
    memory: 4096
    disk: 100
  - name: master2
    ip: 192.168.100.12
    cores: 2
    memory: 4096
    disk: 100
  - name: master3
    ip: 192.168.100.13
    cores: 2
    memory: 4096
    disk: 100

workers:
  - name: worker1
    ip: 192.168.100.21
    cores: 4
    memory: 8192
    disk: 100
    storage_disk: 200
    storage_disk_encryption_key: "topsecret" # Option key to encrypt the storage disk, if not set no encryption is used
  - name: worker2
    ip: 192.168.100.22
    cores: 4
    memory: 8192
    disk: 100
    storage_disk: 200
    storage_disk_encryption_key: "topsecret" # Option key to encrypt the storage disk, if not set no encryption is used

# VLANs for Multus (for later service exposure)
vlan_config:
  - name: vlan1 # only use lowercase alphanumeric characters and -
    vlan_id: 101
    type: static # static or host-local
    address: "192.168.101.100/24"
    gateway: "192.168.101.1"
  - name: vlan2 # only use lowercase alphanumeric characters and -
    vlan_id: 102
    type: host-local # static or host-local
    range_start: 10
    range_end: 250
    subnet: "192.168.102.0/24"
    gateway: "192.168.102.1"

# DNS nameservers used in rendered Talos machine configs. Can be overridden in inventory.
nameservers:
  - 1.1.1.1
  - 8.8.8.8

timeservers:
  - time.cloudflare.com

disable_ipv6: true

# All kuberentes resources defined in static_resources will be applied after cluster creation
# This can be used to pre create namespaces, secrets and so on
# This configuration will be deployed before argocd if both are enabled
# The static resources are applied in order using the kubernetes.core.k8s module
# The following keywords are supported for each item in the list:
#   - definition: A full kubernetes resource definition as a dictionary
#   - src: A path to a yaml file containing one or more kubernetes resource
#   - template: If true the src file will be processed as a jinja2 template before applying
#   - name: A name for the resource (overwritten by definition or src metadata.name if present)
#   - namespace: The namespace to apply the resource to (if not defined in the resource)
#   - wait: If true the task will wait for the resource to be ready (default: false)
#   - wait_condition: The condition to wait for (default: "Available" for Deployments, "Ready" for others)
#   - wait_timeout: Time in seconds to wait for the resource to be ready (default: 300)
#   - wait_sleep: Time in seconds to wait between checks (default: 6)
#   - state: The desired state of the resource (default: present)
#   - force: If true the resource will be replaced if it already exists (default: false)
static_resources: []
  # - definition:
  #     apiVersion: v1
  #     kind: Namespace
  #     metadata:
  #       name: argocd
  # - definition:
  #     apiVersion: apps/v1
  #     kind: Deployment
  #     metadata:
  #       name: example
  #       namespace: testing
  #     spec:
  #       paused: True
  #   wait: yes
  #   wait_condition:
  #     type: Progressing
  #     status: Unknown
  #     reason: DeploymentPaused


# ArgoCD configuration
# Setup argocd and deploy the app-of-apps pattern from the given repo
install_argocd: false
argocd_repo_url: "https://github.com/example/app-of-apps.git"
argocd_repo_type: "git"  # or "helm"
argocd_repo_revision: "main"
argocd_app_name: "app-of-apps"
argocd_app_namespace: "argocd"
argocd_app_path: "apps"  # Path in repo for app-of-apps manifest
argocd_app_dest_namespace: "default"
argocd_app_dest_server: "https://kubernetes.default.svc"
